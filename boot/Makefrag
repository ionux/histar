#
# Makefile fragment for the JOS kernel.
# This is NOT a complete makefile;
# you must run GNU make in the top-level directory
# where the GNUmakefile is located.
#

OBJDIRS += boot

BOOT_OBJS := $(OBJDIR)/boot/boot.o $(OBJDIR)/boot/main.o
BOOT_CFLAGS := -m32 -DCODE32 -g -Os -MD -Wall -Werror

$(OBJDIR)/boot/%.o: boot/%.S
	@mkdir -p $(@D)
	$(CC) $(BOOT_CFLAGS) $(INCLUDES) -c -o $@ $<

$(OBJDIR)/boot/main.o: boot/main.c
	$(CC) $(BOOT_CFLAGS) $(INCLUDES) $(CSTD) -c -o $@ $<

$(OBJDIR)/boot/bsdata: $(OBJDIR)/boot/bsdata.o
	$(LD) -Ttext 0x0 -s --oformat binary -o $@ $<

$(OBJDIR)/boot/boot: $(BOOT_OBJS) $(OBJDIR)/boot/bsdata
	$(LD) -melf_i386 -N -e start -Ttext 0x7C00 -o $@.out $(BOOT_OBJS)
	$(OBJDUMP) -S $@.out >$@.asm
	$(OBJCOPY) -S -O binary $@.out $@
	perl boot/sign.pl $(OBJDIR)/boot/boot $(OBJDIR)/boot/bsdata

$(OBJDIR)/boot/setup: $(OBJDIR)/boot/setup.o
	$(LD) -Ttext 0x30200 -s --oformat binary -e begtext -o $@ $<
	perl boot/setup.pl $(OBJDIR)/boot/setup

# Build a Linux style image for isolinux
$(OBJDIR)/boot/isolinux.img: $(OBJDIR)/kern/kernel $(OBJDIR)/boot/boot $(OBJDIR)/boot/setup
	cat $(OBJDIR)/boot/boot > $(OBJDIR)/boot/isolinux.img
	cat $(OBJDIR)/boot/setup >> $(OBJDIR)/boot/isolinux.img
	cat $(OBJDIR)/kern/kernel >> $(OBJDIR)/boot/isolinux.img

$(OBJDIR)/boot/boot.iso: IMAGE_CMDLINE = default histar
$(OBJDIR)/boot/boot.iso: $(OBJDIR)/boot/isolinux.img
	-rm -rf $(@D)/isoimage
	@mkdir -p $(@D)/isoimage
	for i in lib lib64 share end ; do \
		if [ -f /usr/$$i/syslinux/isolinux.bin ] ; then \
			cp /usr/$$i/syslinux/isolinux.bin $(@D)/isoimage ; \
			break ; \
		fi ; \
		if [ $$i = end ] ; then exit 1 ; fi ; \
	done
	cp $(OBJDIR)/boot/isolinux.img $(@D)/isoimage/histar
	echo '$(IMAGE_CMDLINE)' > $(@D)/isoimage/isolinux.cfg
	mkisofs -J -r -o $@ -b isolinux.bin -c boot.cat \
		-no-emul-boot -boot-load-size 4 -boot-info-table \
		$(@D)/isoimage
