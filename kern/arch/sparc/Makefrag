# -*-Makefile-*-

# The 0x74 link offset corresponds to the offset of the text section
# in the resulting ELF kernel file.  This way, the kernel ELF binary
# can be loaded at a zero offset without any padding or relocation.

KERN_LDFLAGS = -N -Ttext 0x40000074 -e start -nostdlib
KERN_CFLAGS += -msoft-float -fno-builtin

KERN_ARCH :=					\
	$(ARCHDIR)/prom_stage1.S		\
	$(ARCHDIR)/locore.S			\
	$(ARCHDIR)/bootdata.c			\
	$(ARCHDIR)/pmap.c			\
	$(ARCHDIR)/page.c			\
	$(ARCHDIR)/reboot.c			\
	$(ARCHDIR)/init.c			\
	$(ARCHDIR)/trap.c			\
	$(ARCHDIR)/misc.c

KERN_LIB :=					\
	lib/$(ARCH)/mathops.S			\
	lib/$(ARCH)/strlen.S			\
	lib/memcpy.c				\
	lib/memmove.c				\
	lib/memset.c				\
	lib/memcmp.c				\
	lib/printfmt.c				\
	lib/sysstring.c				\
	lib/cksum.c				\
	lib/bf60.c				\
	lib/string.c				\
	lib/hashtable.c

X_KERN_LIB :=					\
	lib/$(ARCH)/longjmp.S

X_KERN_DEV :=					\
	kern/dev/console.c			\
	kern/dev/kclock.c			\
	kern/dev/picirq.c			\
	kern/dev/disk.c				\
	kern/dev/pci.c				\
	kern/dev/ne2kpci.c			\
	kern/dev/fxp.c				\
	kern/dev/e1000.c			\
	kern/dev/pnic.c				\
	kern/dev/apic.c				\
	kern/dev/acpi.c				\
	kern/dev/hpet.c

$(OBJDIR)/kern/kernel:
	$(LD) -o $@ $(KERN_LDFLAGS) $(KERN_OBJFILES) $(GCC_LIB)

$(OBJDIR)/kern/tsim.lds.o: $(ARCHDIR)/tsim.lds.S
	$(CC) $(KERN_CFLAGS) -E -P -C $< -o $@

$(OBJDIR)/kern/kernel.tsim: $(OBJDIR)/kern/kernel $(OBJDIR)/kern/tsim.lds.o
	$(LD) -o $@ -N -T $(OBJDIR)/kern/tsim.lds.o -nostdlib $(KERN_OBJFILES) $(GCC_LIB)

all: $(OBJDIR)/kern/kernel.tsim
