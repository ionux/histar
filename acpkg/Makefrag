ACPKG_PREFIX	:= $(OBJDIR)/acpkg
ACPKG_LDFLAGS	:= -static $(LDFLAGS) -ljos -lc -ljos -lc
ACPKG_CPPFLAGS	:= $(USER_CFLAGS)
ACPKG_BUILD_SYS	:= $(shell $(TOP)/acpkg/config.guess)
AUTOCONF_ARGS	:= --host=$(TARGET) --target=$(TARGET) --build=$(ACPKG_BUILD_SYS) \
		   --prefix=$(TOP)/$(ACPKG_PREFIX)

ACENV += LDFLAGS=\"$(ACPKG_LDFLAGS)\"
ACENV += CPPFLAGS=\"$(ACPKG_CPPFLAGS)\"
ACENV += CC=\"$(CC)\"
ACENV += CPP=\"$(CC) -E $(ACPKG_CPPFLAGS)\"

ACENV_BUILD := CFLAGS_FOR_BUILD=\"-g -O2 -DSTDC_HEADERS\"

## This is for old(?) autoconf versions (like gzip) that ignore LDFLAGS/CPPFLAGS
ACENV += CFLAGS=\"$(ACPKG_LDFLAGS) $(ACPKG_CPPFLAGS)\"

$(OBJDIR)/user/gzip $(OBJDIR)/user/gunzip:
	@mkdir -p $(ACPKG_PREFIX)
	( cd $(TOP)/acpkg/gzip-1.2.4a && sh -c "$(ACENV) ./configure $(AUTOCONF_ARGS)" )
	( cd $(TOP)/acpkg/gzip-1.2.4a && sh -c "$(ACENV) gmake clean" )
	( cd $(TOP)/acpkg/gzip-1.2.4a && sh -c "$(ACENV) gmake" )
	( cd $(TOP)/acpkg/gzip-1.2.4a && sh -c "$(ACENV) gmake install" )
	cp $(OBJDIR)/acpkg/bin/gzip   $(OBJDIR)/user/gzip
	cp $(OBJDIR)/acpkg/bin/gunzip $(OBJDIR)/user/gunzip

binutils:
	@mkdir -p $(ACPKG_PREFIX)
	#find $(TOP)/acpkg/binutils-2.16.1 -name config.cache | xargs rm
	( cd $(TOP)/acpkg/binutils-2.16.1 && sh -c "$(ACENV) ./configure $(AUTOCONF_ARGS) --disable-nls --enable-64-bit-bfd --enable-shared=no" )
	#( cd $(TOP)/acpkg/binutils-2.16.1 && sh -c "$(ACENV) gmake clean" )
	( cd $(TOP)/acpkg/binutils-2.16.1 && sh -c "$(ACENV) gmake" )
	( cd $(TOP)/acpkg/binutils-2.16.1 && sh -c "$(ACENV) gmake install" )

## For building gcc, you must use a cross-compiler of the same version you are
## trying to build.

gcc3.4.4:
	@mkdir -p $(ACPKG_PREFIX)
	find $(TOP)/acpkg/gcc-3.4.4 -name config.cache | xargs rm -f
	find $(TOP)/acpkg/gcc-3.4.4 -name config.log | xargs rm -f
	find $(TOP)/acpkg/gcc-3.4.4 -name config.status | xargs rm -f
	-patch -d $(TOP)/acpkg -N -p0 <$(TOP)/acpkg/patches/gcc3.4.4_makefile_in.patch
	-patch -d $(TOP)/acpkg -N -p0 <$(TOP)/acpkg/patches/gcc3.4.4_gcc_makefile_in.patch
	( cd $(TOP)/acpkg/gcc-3.4.4 && sh -c "$(ACENV) $(ACENV_BUILD) ./configure $(AUTOCONF_ARGS) --disable-nls --without-headers --with-newlib --disable-threads --disable-shared" )
	#( cd $(TOP)/acpkg/gcc-3.4.4 && sh -c "$(ACENV) $(ACENV_BUILD) gmake clean" )
	( cd $(TOP)/acpkg/gcc-3.4.4 && sh -c "$(ACENV) $(ACENV_BUILD) gmake LANGUAGES=c" )
	( cd $(TOP)/acpkg/gcc-3.4.4 && sh -c "$(ACENV) gmake install" )

$(OBJDIR)/user/gcc344: gcc3.4.4
	cp $(OBJDIR)/acpkg/bin/gcc   $(OBJDIR)/user/gcc344
	
## GCC 4.1.0
## not the same problem...
##	http://sourceware.org/ml/crossgcc/2005-07/msg00015.html

GCC_JOS_VARS := \
	sys_errlist sys_nerr sys_siglist

GCC_JOS_YES := \
	asprintf atexit basename bcmp bcopy bsearch bzero calloc \
	clock ffs getcwd getpagesize gettimeofday index insque memchr \
	memcmp memcpy memmove mempcpy memset mkstemps putenv random \
	rename rindex setenv snprintf sigsetmask stpcpy stpncpy strcasecmp \
	strchr strdup strncasecmp strndup strrchr strstr strtod strtol strtoul \
	tmpnam vasprintf vfprintf vprintf vsnprintf vsprintf waitpid \
	getrusage on_exit psignal strerror strsignal sysconf sbrk \
	realpath canonicalize_file_name sysctl wait3 wait4 __fsetlocking

GCC_JOS_NO := \
	pstat_getstatic pstat_getdynamic strverscmp sysmp getsysinfo table _doprnt times \
	mkstemps vfork

GCC_JOS_FORK := fork
	
GCC_JOS_SEARCH := strerror
	
GCC_ENVVARS := $(patsubst %, ac_cv_func_%=yes, $(GCC_JOS_YES))
GCC_ENVVARS += $(patsubst %, ac_cv_func_%=yes, $(GCC_JOS_FORK))
GCC_ENVVARS += $(patsubst %, libiberty_cv_var_%=yes, $(GCC_JOS_VARS))
GCC_ENVVARS += $(patsubst %, ac_cv_func_%=no, $(GCC_JOS_NO))
GCC_ENVVARS += $(patsubst %, ac_cv_search_%="none required", $(GCC_JOS_SEARCH))

GCC_BUILD_FLAGS := JOS64_BUILD_CPPFLAGS=\"-g -O2 -Wall \"

gcc4.1.0:
	@mkdir -p $(ACPKG_PREFIX)
	#find $(TOP)/acpkg/gcc-4.1.0 -name config.cache | xargs rm
	( cd $(TOP)/acpkg/gcc-4.1.0 && sh -c "$(ACENV) $(GCC_BUILD_FLAGS) $(ACENV_BUILD) ./configure $(AUTOCONF_ARGS) --disable-nls --without-libcpp --without-headers --with-newlib --disable-threads --disable-shared" )
	#( cd $(TOP)/acpkg/gcc-4.1.0 && sh -c "$(ACENV) $(GCC_BUILD_FLAGS) $(ACENV_BUILD) gmake clean" )
	( cd $(TOP)/acpkg/gcc-4.1.0 && sh -c "$(ACENV) $(GCC_BUILD_FLAGS) $(ACENV_BUILD) gmake $(GCC_ENVVARS) LANGUAGES=c" )
	( cd $(TOP)/acpkg/gcc-4.1.0 && sh -c "$(ACENV) $(GCC_BUILD_FLAGS) gmake install" )
	
