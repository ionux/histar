ACPKG_PREFIX	:= $(OBJDIR)/acpkg
ACPKG_WRAPDIR	:= $(OBJDIR)/acpkg-wrap

ACPKG_LDFLAGS	:= $(LDFLAGS) -L$(TOP)/$(ACPKG_PREFIX)/lib
ACPKG_CPPFLAGS	:= $(USER_INC) -DJOS_USER -I$(TOP)/$(ACPKG_PREFIX)/include \
		   -I$(TOP)/lib/cppsup
ACPKG_BUILD_SYS	:= $(shell $(TOP)/acpkg/config.guess)
AUTOCONF_ARGS	:= --host=$(TARGET) --target=$(TARGET) --build=$(ACPKG_BUILD_SYS) \
		   --prefix=$(TOP)/$(ACPKG_PREFIX)

## autoconf terminology:
##
##  build system:  system doing the compilation
##  host system:   system that will run the compiled binaries
##  target system: system for which those binaries will generate output
##
## Target system is only applicable to programs that generate binary output,
## like binutils and gcc.

ACENV += CFLAGS_FOR_BUILD=\"-g -O2 -DSTDC_HEADERS\"
ACENV += LIBS=\"\"

ACENV += CC=\"$(CC)\" CXX=\"$(CXX)\" RPCC=\"$(RPCC)\" TAME=\"$(TAME)\"
ACENV += PATH=\"$(TOP)/$(ACPKG_WRAPDIR):$$PATH\"
ACENV += ac_cv_func_setpgrp_void=yes ac_cv_func_setvbuf_reversed=no \
	bash_cv_getcwd_malloc=yes bash_cv_getenv_redef=no ac_cv_func_psignal=yes \
	bash_cv_job_control_missing=no

##
## ./configure arguments for different packages
##
AUTOCONF_openvpn-2.0.5	    := --disable-lzo --disable-ssl --disable-crypto
AUTOCONF_binutils-2.16.1    := --disable-nls --enable-64-bit-bfd --enable-shared=no
AUTOCONF_gcc-3.4.5	    := --disable-nls --without-headers --with-newlib --disable-threads --disable-shared
AUTOCONF_clamav-0.88	    := --disable-clamav --disable-shared --disable-pthreads
AUTOCONF_openssh-4.3p2	    := --with-privsep-path=$(TOP)/$(ACPKG_PREFIX)/privsep
AUTOCONF_ncurses-5.5	    := --without-cxx-binding
AUTOCONF_vim70		    := --with-tlib=ncurses
AUTOCONF_gmp-4.2.1	    := --enable-shared=no
AUTOCONF_sfslite-0.8.9pre3  := --enable-shared=no

##
## Patches to apply to various packages
##
PATCHFILE_coreutils-5.94    := coreutils-5.94.patch
PATCHFILE_tar-1.15	    := tar-1.15.patch
PATCHFILE_gcc-3.4.5	    := gcc34.patch
PATCHFILE_openssl-0.9.8a    := openssl-0.9.8a.patch
PATCHFILE_openssh-4.3p2     := openssh-4.3p2.patch
PATCHFILE_gdb-6.5	    := gdb-6.5.patch
PATCHFILE_vim70		    := vim70.patch
PATCHFILE_sfslite-0.8.9pre3 := sfslite-0.8.9pre3.patch
PATCHFILE_default	    := empty.patch

##
## Packages we want to include
##
ACPKG_BUILD_LIST := tar-1.15 

##
## Create a wrapper around gcc that passes it all of the flags we want.
##
REAL_TARGET_GCC	:= $(shell which $(TARGET)-gcc)
REAL_TARGET_CXX	:= $(shell which $(TARGET)-c++)
ACPKG_WRAPS	:= $(ACPKG_WRAPDIR)/$(TARGET)-gcc  \
                   $(ACPKG_WRAPDIR)/$(TARGET)-c++
ACPKG_CCACHE	:= $(shell ccache -V >/dev/null 2>/dev/null && echo ccache)

$(ACPKG_WRAPS):
	@mkdir -p $(ACPKG_WRAPDIR)
	echo "#!/bin/sh" > $(ACPKG_WRAPDIR)/$(TARGET)-gcc
	echo "exec $(ACPKG_CCACHE) $(REAL_TARGET_GCC) \"\$$@\" $(ACPKG_CPPFLAGS) $(ACPKG_LDFLAGS)" >> $(ACPKG_WRAPDIR)/$(TARGET)-gcc
	chmod a+x $(ACPKG_WRAPDIR)/$(TARGET)-gcc
	echo "#!/bin/sh" > $(ACPKG_WRAPDIR)/$(TARGET)-c++
	echo "exec $(ACPKG_CCACHE) $(REAL_TARGET_CXX) \"\$$@\" $(ACPKG_CPPFLAGS) $(ACPKG_LDFLAGS)" >> $(ACPKG_WRAPDIR)/$(TARGET)-c++
	chmod a+x $(ACPKG_WRAPDIR)/$(TARGET)-c++

.PRECIOUS: acpkg/%/Makefile
acpkg/%/Makefile: PKGNAME=$(patsubst acpkg/%/Makefile,%,$@)
acpkg/%/Makefile: $(ACPKG_WRAPS) acpkg/%/__patch
	@mkdir -p $(ACPKG_PREFIX)
	-find acpkg/$(PKGNAME) -name config.cache | xargs rm -f
	-find acpkg/$(PKGNAME) -name config.status | xargs rm -f
	-( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake distclean" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) ./configure \
		$(AUTOCONF_ARGS) $(AUTOCONF_$(PKGNAME))" )

.PRECIOUS: acpkg/%/__patch
acpkg/%/__patch: PKGNAME=$(patsubst acpkg/%/__patch,%,$@)
acpkg/%/__patch: PATCHFILE=$(PATCHFILE_$(patsubst acpkg/%/__patch,%,$@))$(PATCHFILE_default$(PATCHFILE_$(patsubst acpkg/%/__patch,%,$@)))
acpkg/%/__patch: acpkg/patches/$(PATCHFILE_$(patsubst acpkg/%/__patch,%,$@))$(PATCHFILE_default$(PATCHFILE_$(patsubst acpkg/%/__patch,%,$@)))
	patch -d acpkg/$(PKGNAME) -p1 < acpkg/patches/$(PATCHFILE)
	touch $@

.PRECIOUS: acpkg/%/__reconf
acpkg/%/__reconf: PKGNAME=$(patsubst acpkg/%/__reconf,%,$@)
acpkg/%/__reconf: $(ACPKG_WRAPS) acpkg/%/__patch
	( cd acpkg/$(PKGNAME) && sh -c "autoreconf -fis" )
	touch $@

.PRECIOUS: acpkg/%/__build
acpkg/%/__build: PKGNAME=$(patsubst acpkg/%/__build,%,$@)
acpkg/%/__build: acpkg/%/Makefile $(LDEPS)
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake clean" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake install" )
	touch $@

$(OBJDIR)/user/%.debuginfo: $(OBJDIR)/acpkg/bin/$(TARGET)-%
	cp $< $@

$(OBJDIR)/user/%.debuginfo: $(OBJDIR)/acpkg/bin/%
	cp $< $@

$(OBJDIR)/user/%.debuginfo: $(OBJDIR)/acpkg/sbin/$(TARGET)-%
	cp $< $@

$(OBJDIR)/user/%.debuginfo: $(OBJDIR)/acpkg/sbin/%
	cp $< $@

$(OBJDIR)/user/acpkg_tar: $(patsubst %, acpkg/%/__build, $(ACPKG_BUILD_LIST))
	rm -f $@
	#find $(OBJDIR)/acpkg -type f | xargs $(STRIP)
	tar -cf $@ -C $(OBJDIR)/acpkg .

##
## Application rules
##
   	
## ftp://ftp.gnu.org/pub/gnu/gzip/gzip-1.2.4a.tar.gz
$(OBJDIR)/acpkg/bin/gzip $(OBJDIR)/acpkg/bin/gunzip: acpkg/gzip-1.2.4a/__build

## ftp://ftp.gnu.org/gnu/tar/tar-1.15.tar.gz
$(OBJDIR)/acpkg/bin/tar: acpkg/tar-1.15/__build

## ftp://ftp.gnu.org/gnu/nano/nano-1.2.3.tar.gz
$(OBJDIR)/acpkg/bin/nano: acpkg/nano-1.2.3/__build

## http://ftp.gnu.org/pub/gnu/bash/bash-3.1.tar.gz
$(OBJDIR)/acpkg/bin/bash: acpkg/bash-3.1/__build

## ftp://ftp.vim.org/pub/vim/unix/vim-7.0.tar.bz2
## http://linuxfromscratch.org/pipermail/patches/attachments/20060606/fc29f4b0/vim-7.0-cross_compile-1.bin
acpkg/vim70/__build: $(ACPKG_WRAPS) acpkg/vim70/__patch $(OBJDIR)/lib/libncurses.a
	( cd acpkg/vim70 && sh -c "$(ACENV) ./configure $(AUTOCONF_ARGS) $(AUTOCONF_vim70)" )
	( cd acpkg/vim70 && sh -c "$(ACENV) gmake" )
	( cd acpkg/vim70 && sh -c "$(ACENV) gmake install" )
	touch $@	
$(OBJDIR)/acpkg/bin/vim: acpkg/vim70/__build

## http://ftp.gnu.org/pub/gnu/wget/wget-1.9.1.tar.gz
$(OBJDIR)/acpkg/bin/wget: acpkg/wget-1.9.1/__build

## http://ftp.gnu.org/gnu/gdb/gdb-6.5.tar.gz
acpkg/gdb-6.5/gdb/config/i386/__gl:
	ln -fs $(TOP)/pkg/gdb-gl/jos64.mh $(@D)/jos64.mh 
	ln -fs $(TOP)/pkg/gdb-gl/jos64.mt $(@D)/jos64.mt
	ln -fs $(TOP)/pkg/gdb-gl/nm-jos64.h $(@D)/nm-jos64.h
	ln -fs $(TOP)/pkg/gdb-gl/jos64-nat.c 	\
	       $(TOP)/acpkg/gdb-6.5/gdb/jos64-nat.c
	touch $@
			
$(OBJDIR)/acpkg/bin/gdbserver 		     \
$(OBJDIR)/acpkg/bin/gdb: 		     \
	acpkg/gdb-6.5/gdb/config/i386/__gl   \
	$(OBJDIR)/lib/libncurses.a	     \
	acpkg/gdb-6.5/__build		

## ftp://ftp.gnu.org/gnu/coreutils/coreutils-5.94.tar.gz
$(OBJDIR)/acpkg/bin/od: acpkg/coreutils-5.94/__build

## http://openvpn.net/release/openvpn-2.0.5.tar.gz 
$(OBJDIR)/acpkg/sbin/$(TARGET)-openvpn: acpkg/openvpn-2.0.5/__build

## http://ftp.gnu.org/pub/gnu/make/make-3.81.tar.gz
$(OBJDIR)/acpkg/bin/make: acpkg/make-3.81/__build

## ftp://ftp5.usa.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-4.3p2.tar.gz
acpkg/openssh-4.3p2/Makefile: acpkg/openssl-0.9.8a/__build
acpkg/openssh-4.3p2/Makefile: acpkg/zlib-1.2.3/__build
acpkg/openssh-4.3p2/__build: acpkg/openssh-4.3p2/Makefile $(LDEPS)
	-( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake clean" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake install-nokeys" )
	touch $@

$(OBJDIR)/acpkg/bin/scp: acpkg/openssh-4.3p2/__build
$(OBJDIR)/acpkg/sbin/sshd: acpkg/openssh-4.3p2/__build
$(OBJDIR)/user/ssh.tar: acpkg/openssh-4.3p2/__build
	rm -f $@
	echo "UsePrivilegeSeparation no" > $(OBJDIR)/acpkg/etc/sshd_config
	echo "UseDNS no" >> $(OBJDIR)/acpkg/etc/sshd_config
	echo "Port 22" >> $(OBJDIR)/acpkg/etc/sshd_config
	echo "ListenAddress 0.0.0.0" >> $(OBJDIR)/acpkg/etc/sshd_config
	echo "HostKey /etc/ssh_host_rsa_key" >> $(OBJDIR)/acpkg/etc/sshd_config
	echo "HostKey /etc/ssh_host_dsa_key" >> $(OBJDIR)/acpkg/etc/sshd_config
	mkdir -p keys

	if [ ! -f keys/id_rsa ]; then \
	    ssh-keygen -t rsa -f keys/id_rsa -N ""; \
	fi

	if [ ! -f keys/ssh_host_dsa_key ]; then \
	    ssh-keygen -t dsa -f keys/ssh_host_dsa_key -N ""; \
	fi

	if [ ! -f keys/ssh_host_rsa_key ]; then \
	    ssh-keygen -t rsa -f keys/ssh_host_rsa_key -N ""; \
	fi

	rm -rf $(OBJDIR)/acpkg/.ssh
	mkdir $(OBJDIR)/acpkg/.ssh
	rm -f $(OBJDIR)/acpkg/etc/ssh_host_*

	if [ -f $(HOME)/.ssh/authorized_keys ]; then \
	    cp $(HOME)/.ssh/authorized_keys $(OBJDIR)/acpkg/.ssh; \
	fi

	cat keys/id_rsa.pub >> $(OBJDIR)/acpkg/.ssh/authorized_keys
	cp keys/ssh_host_* $(OBJDIR)/acpkg/etc

	tar -cf $@ -C $(OBJDIR)/acpkg	etc/sshd_config \
					etc/ssh_host_dsa_key \
					etc/ssh_host_dsa_key.pub \
					etc/ssh_host_rsa_key \
					etc/ssh_host_rsa_key.pub \
					.ssh/authorized_keys

## http://www.zlib.net/zlib-1.2.3.tar.gz
acpkg/zlib-1.2.3/__build: $(ACPKG_WRAPS)
	@mkdir -p $(ACPKG_PREFIX)
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake distclean" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) ./configure --prefix=$(TOP)/$(ACPKG_PREFIX)" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake install" )
	touch $@

## http://easynews.dl.sourceforge.net/sourceforge/clamav/clamav-0.88.tar.gz
acpkg/clamav-0.88/Makefile: acpkg/zlib-1.2.3/__build
$(OBJDIR)/acpkg/bin/$(TARGET)-clamscan: acpkg/clamav-0.88/__build
$(OBJDIR)/acpkg/share/clamav/main.cvd: acpkg/clamav-0.88/__build
$(OBJDIR)/user/clamav_%.cvd: $(OBJDIR)/acpkg/share/clamav/%.cvd
	cp $< $@

## ftp://ftp.openssl.org/source/openssl-0.9.8a.tar.gz
acpkg/openssl-0.9.8a/__build: acpkg/zlib-1.2.3/__build acpkg/openssl-0.9.8a/__patch $(ACPKG_WRAPS) $(LDEPS)
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) ./Configure $(TARGET) --prefix=$(TOP)/$(ACPKG_PREFIX)" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake" )
	( cd acpkg/$(PKGNAME) && sh -c "$(ACENV) gmake install_sw" )
	touch $@

## ftp://ftp.gnu.org/gnu/ncurses/ncurses-5.5.tar.gz 
acpkg/ncurses-5.5/__build: acpkg/ncurses-5.5/Makefile $(ACPKG_WRAPS) $(LDEPS)
	( cd acpkg/ncurses-5.5 && sh -c "$(ACENV) gmake" )
	( cd acpkg/ncurses-5.5 && sh -c "$(ACENV) gmake install.progs" )
	( cd acpkg/ncurses-5.5 && sh -c "$(ACENV) gmake install.libs" )
	( cd acpkg/ncurses-5.5 && sh -c "$(ACENV) gmake install.data" )
	touch $@

$(OBJDIR)/acpkg/lib/libncurses.a: acpkg/ncurses-5.5/__build
$(OBJDIR)/lib/libncurses.a: $(OBJDIR)/acpkg/lib/libncurses.a
	ln -fs $(TOP)/$(OBJDIR)/acpkg/lib/libncurses.a \
	       $(TOP)/$(OBJDIR)/lib/libncurses.a

$(OBJDIR)/acpkg/lib/libgmp.a: acpkg/gmp-4.2.1/__build

SFSDEPS := $(OBJDIR)/acpkg/lib/libgmp.a acpkg/sfslite-0.8.9pre3/__reconf \
	   acpkg/sfslite-0.8.9pre3/__build

$(OBJDIR)/acpkg/include/sfslite: $(SFSDEPS)
$(OBJDIR)/acpkg/lib/sfslite/libasync.a: $(SFSDEPS)
$(OBJDIR)/acpkg/lib/sfslite/libarpc.a: $(SFSDEPS)

## For building gcc, you must use a cross-compiler of the same version you are
## trying to build.

## ftp://ftp.gnu.org/pub/gnu/gcc/gcc-3.4.5/gcc-core-3.4.5.tar.gz
acpkg/gcc-3.4.5/Makefile: acpkg/binutils-2.16.1/__build
acpkg/gcc-3.4.5/__build: acpkg/gcc-3.4.5/Makefile
	-( cd acpkg/gcc-3.4.5 && sh -c "$(ACENV) gmake clean" )
	( cd acpkg/gcc-3.4.5 && sh -c "$(ACENV) gmake LANGUAGES=\"c\"" )
	( cd acpkg/gcc-3.4.5 && sh -c "$(ACENV) gmake install" )
	cat conf/gcc.specs >> $(OBJDIR)/acpkg/lib/gcc/x86_64-jos-linux/3.4.5/specs
	touch $@

$(OBJDIR)/user/gcc.tar.gz: acpkg/gcc-3.4.5/__build $(LDEPS) acpkg/binutils-2.16.1/__build
	rm -f $@
	cp $(OBJDIR)/lib/crt*.o $(OBJDIR)/acpkg/lib/gcc/x86_64-jos-linux/3.4.5/
	cp $(OBJDIR)/lib/libjos.a $(OBJDIR)/acpkg/lib/
	cp $(OBJDIR)/lib/libc.a $(OBJDIR)/acpkg/lib/
	cp $(OBJDIR)/lib/libm.a $(OBJDIR)/acpkg/lib/
	cp $(OBJDIR)/lib/liblwip.a $(OBJDIR)/acpkg/lib/
	cp $(OBJDIR)/lib/libutil.a $(OBJDIR)/acpkg/lib/
	tar -zcf $@ -C $(OBJDIR)/acpkg \
		bin/gcc bin/ld bin/as \
		libexec/gcc/x86_64-jos-linux/3.4.5/cc1 \
		libexec/gcc/x86_64-jos-linux/3.4.5/collect2 \
		lib/libjos.a lib/libc.a lib/libm.a lib/liblwip.a lib/libutil.a \
		lib/gcc/x86_64-jos-linux/3.4.5/crtbegin.o \
		lib/gcc/x86_64-jos-linux/3.4.5/crtend.o \
		lib/gcc/x86_64-jos-linux/3.4.5/libgcc.a \
		lib/gcc/x86_64-jos-linux/3.4.5/specs \
		lib/gcc/x86_64-jos-linux/3.4.5/crt1.o \
		lib/gcc/x86_64-jos-linux/3.4.5/crti.o \
		lib/gcc/x86_64-jos-linux/3.4.5/crtn.o \
		lib/gcc/x86_64-jos-linux/3.4.5/include

