threads should not have refcounts -- switch ownership on gate call?

threads as 1-slot (or few-slot) containers

user-specified segment labeling
in-kernel segment copying
user-specified container labeling
larger labels

label checking for network buffers

type-check for correct info_flow_type values (easier in C++)

C type-safety for enums/int-typedefs: wrap in a struct

* it would be nice if gate_enter() didn't automatically compute the
  contamination, but allowed the user to compute the target label
  and verified that it's OK.  benefit: easier to make return gate.
  is it OK to allow user to look at the gate's target label?
  looks like yes..

implement MLTs
do COW in gate_enter_locked()
use MLTs to store COW mappings in gate_enter for later reuse

kernel waiting primitive: sys_wait_for_equal(int *ptr, int val)

verify that KOBJ_DIRTY is set everywhere appropriately (probably isn't!!)
page COW while snapshoting (need to COW indirect pages too)
page reclamation, LRU
deal with segment fragmentation on-disk

