threads should not have refcounts -- switch ownership on gate call?

thread containers should not be nameable by container ID,
and should not allow sub-containers or sub-threads.  probably
a container should have a list of allowable objects, and the
thread-specific containers won't allow containers or threads.

user-specified segment labeling
segment_copy syscall
in-kernel segment COW: beware of DMA (watch for ko->ko_pin_pg)
user-specified container labeling
larger labels (if needed?)

* it would be nice if gate_enter() didn't automatically compute the
  contamination, but allowed the user to compute the target label
  and verified that it's OK.  benefit: easier to make return gate.
  is it OK to allow user to look at the gate's target label?
  looks like yes..

do COW in gate_enter()
use MLTs to store COW mappings in gate_enter for later reuse

kernel waiting primitive: sys_wait_for_equal(int *ptr, int val)

page reclamation, LRU
deal with segment fragmentation on-disk

do page-faulting threads always terminate?  e.g. write to unwritable page..
what about page_user_incore() -- should take ro/rw flag..

